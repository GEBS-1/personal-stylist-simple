import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';

export const TestEnv: React.FC = () => {
  const envVars = {
    'VITE_GIGACHAT_CLIENT_ID': import.meta.env.VITE_GIGACHAT_CLIENT_ID,
    'VITE_GIGACHAT_CLIENT_SECRET': import.meta.env.VITE_GIGACHAT_CLIENT_SECRET,
    'NODE_ENV': import.meta.env.NODE_ENV,
    'DEV': import.meta.env.DEV,
    'BASE_URL': import.meta.env.BASE_URL
  };

  const hasValidKeys = envVars['VITE_GIGACHAT_CLIENT_ID'] && 
                      envVars['VITE_GIGACHAT_CLIENT_SECRET'] &&
                      !envVars['VITE_GIGACHAT_CLIENT_ID'].includes('your_') &&
                      !envVars['VITE_GIGACHAT_CLIENT_SECRET'].includes('your_');

  return (
    <Card className="w-full max-w-2xl mx-auto">
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          üß™ –¢–µ—Å—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
        </CardTitle>
      </CardHeader>
      <CardContent className="space-y-4">
        <div>
          <h3 className="text-lg font-semibold mb-2">üîë –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:</h3>
          <div className="space-y-2">
            {Object.entries(envVars).map(([key, value]) => (
              <div key={key} className="flex items-center gap-2">
                <Badge variant={value ? 'default' : 'destructive'}>
                  {value ? '‚úÖ' : '‚ùå'}
                </Badge>
                <span className="font-mono text-sm">
                  <strong>{key}:</strong> {value || '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û'}
                </span>
              </div>
            ))}
          </div>
        </div>

        <Separator />

        <div>
          <h3 className="text-lg font-semibold mb-2">üé® –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:</h3>
          <div className="space-y-2">
            <div className="flex items-center gap-2">
              <Badge variant={hasValidKeys ? 'default' : 'destructive'}>
                {hasValidKeys ? '‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ' : '‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ'}
              </Badge>
              <span>–°—Ç–∞—Ç—É—Å</span>
            </div>
            
            <div className="text-sm text-muted-foreground">
              <strong>–ü—Ä–∏—á–∏–Ω–∞:</strong> {
                !envVars['VITE_GIGACHAT_CLIENT_ID'] ? '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç CLIENT_ID' :
                !envVars['VITE_GIGACHAT_CLIENT_SECRET'] ? '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç CLIENT_SECRET' :
                envVars['VITE_GIGACHAT_CLIENT_ID'].includes('your_') || 
                envVars['VITE_GIGACHAT_CLIENT_SECRET'].includes('your_') ? 'Placeholder –∑–Ω–∞—á–µ–Ω–∏—è' :
                '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
              }
            </div>
          </div>
        </div>

        <Separator />

        <div className="text-sm text-muted-foreground">
          <p><strong>üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞:</strong> –ï—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ —á–∏—Ç–∞—é—Ç—Å—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ:</p>
          <ul className="list-disc list-inside mt-2 space-y-1">
            <li>–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (npm run dev)</li>
            <li>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ —Ñ–∞–π–ª .env –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞</li>
            <li>–£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å VITE_</li>
            <li>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ –æ—à–∏–±–∫–∏</li>
          </ul>
        </div>
      </CardContent>
    </Card>
  );
};

const Separator = () => <div className="border-t my-4" />;
