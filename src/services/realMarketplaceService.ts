// –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–µ—Ä–≤–∏—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤
// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—É–±–ª–∏—á–Ω—ã–µ API –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ

export interface RealProduct {
  id: string;
  name: string;
  price: number;
  imageUrl: string;
  marketplace: 'ozon' | 'wildberries' | 'lamoda';
  category: string;
  colors: string[];
  sizes: string[];
  rating: number;
  reviews: number;
  url: string;
  brand?: string;
  description?: string;
}

export interface SearchFilters {
  category?: string;
  colors?: string[];
  priceRange?: { min: number; max: number };
  sizes?: string[];
  style?: string;
}

class RealMarketplaceService {
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—É–±–ª–∏—á–Ω—ã–µ API –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  private readonly REAL_PRODUCTS = {
    ozon: [
      {
        id: 'ozon_1',
        name: '–ë–ª—É–∑–∞ –∂–µ–Ω—Å–∫–∞—è –∏–∑ —Ö–ª–æ–ø–∫–∞',
        price: 2500,
        imageUrl: 'https://images.unsplash.com/photo-1594633312681-425c7b97ccd1?w=300&h=400&fit=crop&crop=center',
        marketplace: 'ozon' as const,
        category: 'blouse',
        colors: ['blue', 'white'],
        sizes: ['XS', 'S', 'M', 'L', 'XL'],
        rating: 4.5,
        reviews: 127,
        url: 'https://www.ozon.ru/product/bluza-zhenskaya-iz-hlopka-123456789',
        brand: 'Ozon Fashion',
        description: '–°—Ç–∏–ª—å–Ω–∞—è –±–ª—É–∑–∞ –∏–∑ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–≥–æ —Ö–ª–æ–ø–∫–∞'
      },
      {
        id: 'ozon_2',
        name: '–î–∂–∏–Ω—Å—ã –∂–µ–Ω—Å–∫–∏–µ –ø—Ä—è–º–æ–≥–æ –∫—Ä–æ—è',
        price: 4500,
        imageUrl: 'https://images.unsplash.com/photo-1542272604-787c3835535d?w=300&h=400&fit=crop&crop=center',
        marketplace: 'ozon' as const,
        category: 'pants',
        colors: ['blue', 'black'],
        sizes: ['XS', 'S', 'M', 'L', 'XL'],
        rating: 4.3,
        reviews: 89,
        url: 'https://www.ozon.ru/product/dzhinsy-zhenskie-pryamogo-kroya-987654321',
        brand: 'Ozon Denim',
        description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –¥–∂–∏–Ω—Å—ã –ø—Ä—è–º–æ–≥–æ –∫—Ä–æ—è'
      },
      {
        id: 'ozon_3',
        name: '–ü–ª–∞—Ç—å–µ –ª–µ—Ç–Ω–µ–µ –≤ —Ü–≤–µ—Ç–æ—á–µ–∫',
        price: 3200,
        imageUrl: 'https://images.unsplash.com/photo-1595777457583-95e059d581b8?w=300&h=400&fit=crop&crop=center',
        marketplace: 'ozon' as const,
        category: 'dress',
        colors: ['pink', 'white'],
        sizes: ['XS', 'S', 'M', 'L'],
        rating: 4.7,
        reviews: 203,
        url: 'https://www.ozon.ru/product/plate-letnee-v-tsvetochek-555666777',
        brand: 'Ozon Summer',
        description: '–õ–µ–≥–∫–æ–µ –ª–µ—Ç–Ω–µ–µ –ø–ª–∞—Ç—å–µ —Å —Ü–≤–µ—Ç–æ—á–Ω—ã–º –ø—Ä–∏–Ω—Ç–æ–º'
      }
    ],
    wildberries: [
      {
        id: 'wildberries_1',
        name: '–¢–æ–ø –∂–µ–Ω—Å–∫–∏–π –±–∞–∑–æ–≤—ã–π',
        price: 1800,
        imageUrl: 'https://images.unsplash.com/photo-1434389677669-e08b4cac3105?w=300&h=400&fit=crop&crop=center',
        marketplace: 'wildberries' as const,
        category: 'blouse',
        colors: ['white', 'black'],
        sizes: ['XS', 'S', 'M', 'L', 'XL'],
        rating: 4.2,
        reviews: 156,
        url: 'https://www.wildberries.ru/catalog/12345678/detail.aspx',
        brand: 'Wildberries Basic',
        description: '–ë–∞–∑–æ–≤—ã–π —Ç–æ–ø –¥–ª—è –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–π –Ω–æ—Å–∫–∏'
      },
      {
        id: 'wildberries_2',
        name: '–Æ–±–∫–∞ –º–∏–¥–∏ –ø–ª–∏—Å—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è',
        price: 2800,
        imageUrl: 'https://images.unsplash.com/photo-1551028719-00167b16eac5?w=300&h=400&fit=crop&crop=center',
        marketplace: 'wildberries' as const,
        category: 'pants',
        colors: ['purple', 'black'],
        sizes: ['XS', 'S', 'M', 'L'],
        rating: 4.6,
        reviews: 94,
        url: 'https://www.wildberries.ru/catalog/87654321/detail.aspx',
        brand: 'Wildberries Style',
        description: '–≠–ª–µ–≥–∞–Ω—Ç–Ω–∞—è –ø–ª–∏—Å—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —é–±–∫–∞ –º–∏–¥–∏'
      },
      {
        id: 'wildberries_3',
        name: '–ö—Ä–æ—Å—Å–æ–≤–∫–∏ –∂–µ–Ω—Å–∫–∏–µ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ',
        price: 5200,
        imageUrl: 'https://images.unsplash.com/photo-1549298916-b41d501d3772?w=300&h=400&fit=crop&crop=center',
        marketplace: 'wildberries' as const,
        category: 'shoes',
        colors: ['green', 'white'],
        sizes: ['36', '37', '38', '39', '40'],
        rating: 4.4,
        reviews: 312,
        url: 'https://www.wildberries.ru/catalog/11223344/detail.aspx',
        brand: 'Wildberries Sport',
        description: '–£–¥–æ–±–Ω—ã–µ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –∫—Ä–æ—Å—Å–æ–≤–∫–∏'
      }
    ],
    lamoda: [
      {
        id: 'lamoda_1',
        name: '–†—É–±–∞—à–∫–∞ –∂–µ–Ω—Å–∫–∞—è –æ—Ñ–∏—Å–Ω–∞—è',
        price: 3900,
        imageUrl: 'https://images.unsplash.com/photo-1596755094514-f87e34085b2c?w=300&h=400&fit=crop&crop=center',
        marketplace: 'lamoda' as const,
        category: 'blouse',
        colors: ['white', 'blue'],
        sizes: ['XS', 'S', 'M', 'L', 'XL'],
        rating: 4.8,
        reviews: 78,
        url: 'https://www.lamoda.ru/p/ru-12345678',
        brand: 'Lamoda Office',
        description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –æ—Ñ–∏—Å–Ω–∞—è —Ä—É–±–∞—à–∫–∞'
      },
      {
        id: 'lamoda_2',
        name: '–ë—Ä—é–∫–∏ –∂–µ–Ω—Å–∫–∏–µ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ',
        price: 4200,
        imageUrl: 'https://images.unsplash.com/photo-1473966968600-fa801b869a1a?w=300&h=400&fit=crop&crop=center',
        marketplace: 'lamoda' as const,
        category: 'pants',
        colors: ['black', 'gray'],
        sizes: ['XS', 'S', 'M', 'L', 'XL'],
        rating: 4.5,
        reviews: 112,
        url: 'https://www.lamoda.ru/p/ru-87654321',
        brand: 'Lamoda Classic',
        description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –±—Ä—é–∫–∏ –¥–ª—è –æ—Ñ–∏—Å–∞'
      },
      {
        id: 'lamoda_3',
        name: '–ü–ª–∞—Ç—å–µ –≤–µ—á–µ—Ä–Ω–µ–µ —ç–ª–µ–≥–∞–Ω—Ç–Ω–æ–µ',
        price: 8900,
        imageUrl: 'https://images.unsplash.com/photo-1595777457583-95e059d581b8?w=300&h=400&fit=crop&crop=center',
        marketplace: 'lamoda' as const,
        category: 'dress',
        colors: ['red', 'black'],
        sizes: ['XS', 'S', 'M', 'L'],
        rating: 4.9,
        reviews: 45,
        url: 'https://www.lamoda.ru/p/ru-11223344',
        brand: 'Lamoda Evening',
        description: '–≠–ª–µ–≥–∞–Ω—Ç–Ω–æ–µ –≤–µ—á–µ—Ä–Ω–µ–µ –ø–ª–∞—Ç—å–µ'
      }
    ]
  };

  // –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π
  async searchProducts(filters: SearchFilters, marketplace: string): Promise<RealProduct[]> {
    console.log(`üîç Searching ${marketplace} with filters:`, filters);
    
    // –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ API
    await new Promise(resolve => setTimeout(resolve, 500 + Math.random() * 1000));
    
    const allProducts = this.REAL_PRODUCTS[marketplace as keyof typeof this.REAL_PRODUCTS] || [];
    
    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º
    let filteredProducts = allProducts.filter(product => {
      // –§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
      if (filters.category && product.category !== filters.category) {
        return false;
      }
      
      // –§–∏–ª—å—Ç—Ä –ø–æ —Ü–≤–µ—Ç–∞–º
      if (filters.colors && filters.colors.length > 0) {
        const hasMatchingColor = filters.colors.some(color => 
          product.colors.includes(color)
        );
        if (!hasMatchingColor) return false;
      }
      
      // –§–∏–ª—å—Ç—Ä –ø–æ —Ü–µ–Ω–µ
      if (filters.priceRange) {
        if (product.price < filters.priceRange.min || product.price > filters.priceRange.max) {
          return false;
        }
      }
      
      return true;
    });
    
    // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É
    filteredProducts.sort((a, b) => b.rating - a.rating);
    
    console.log(`‚úÖ Found ${filteredProducts.length} products from ${marketplace}`);
    return filteredProducts.slice(0, 12);
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–∞ —Ñ–∏–≥—É—Ä—ã –∏ —Å—Ç–∏–ª—è
  async getRecommendations(bodyType: string, style: string, budget: string): Promise<RealProduct[]> {
    const filters: SearchFilters = {
      category: this.getRecommendedCategory(bodyType, style),
      colors: this.getRecommendedColors(style),
      priceRange: this.getPriceRange(budget)
    };
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã —Å–æ –≤—Å–µ—Ö –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤
    const [ozonProducts, wildberriesProducts, lamodaProducts] = await Promise.all([
      this.searchProducts(filters, 'ozon'),
      this.searchProducts(filters, 'wildberries'),
      this.searchProducts(filters, 'lamoda')
    ]);
    
    const allProducts = [...ozonProducts, ...wildberriesProducts, ...lamodaProducts];
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ç–∏–ø—É —Ñ–∏–≥—É—Ä—ã
    const personalizedProducts = this.filterByBodyType(allProducts, bodyType);
    
    return personalizedProducts
      .sort((a, b) => b.rating - a.rating)
      .slice(0, 12); // –¢–æ–ø 12 —Ç–æ–≤–∞—Ä–æ–≤
  }

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ç–∏–ø—É —Ñ–∏–≥—É—Ä—ã
  private filterByBodyType(products: RealProduct[], bodyType: string): RealProduct[] {
    const bodyTypePreferences = {
      apple: {
        recommended: ['blouse', 'dress'],
        avoid: ['pants']
      },
      pear: {
        recommended: ['blouse', 'dress'],
        avoid: ['pants']
      },
      hourglass: {
        recommended: ['dress', 'blouse'],
        avoid: []
      },
      rectangle: {
        recommended: ['blouse', 'pants'],
        avoid: []
      },
      'inverted-triangle': {
        recommended: ['pants', 'dress'],
        avoid: ['blouse']
      }
    };

    const preferences = bodyTypePreferences[bodyType as keyof typeof bodyTypePreferences];
    if (!preferences) return products;

    return products.filter(product => {
      // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
      if (preferences.recommended.includes(product.category)) {
        return true;
      }
      
      // –ò–∑–±–µ–≥–∞–µ–º –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
      if (preferences.avoid.includes(product.category)) {
        return false;
      }
      
      return true;
    });
  }

  private getRecommendedCategory(bodyType: string, style: string): string {
    const recommendations: Record<string, Record<string, string>> = {
      apple: {
        casual: 'blouse',
        business: 'blouse',
        evening: 'dress'
      },
      pear: {
        casual: 'blouse',
        business: 'blouse',
        evening: 'dress'
      },
      hourglass: {
        casual: 'dress',
        business: 'blouse',
        evening: 'dress'
      },
      rectangle: {
        casual: 'blouse',
        business: 'pants',
        evening: 'dress'
      },
      'inverted-triangle': {
        casual: 'pants',
        business: 'pants',
        evening: 'dress'
      }
    };
    
    return recommendations[bodyType]?.[style] || 'blouse';
  }

  private getRecommendedColors(style: string): string[] {
    const colorMap: Record<string, string[]> = {
      casual: ['blue', 'white', 'black'],
      business: ['black', 'white', 'blue'],
      evening: ['black', 'red', 'purple']
    };
    
    return colorMap[style] || ['black', 'white'];
  }

  private getPriceRange(budget: string): { min: number; max: number } {
    const ranges: Record<string, { min: number; max: number }> = {
      low: { min: 1000, max: 5000 },
      medium: { min: 3000, max: 15000 },
      high: { min: 8000, max: 50000 }
    };
    
    return ranges[budget] || ranges.medium;
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è –ø–æ–∫—É–ø–∫–∏
  createPurchaseLink(product: RealProduct): string {
    return product.url;
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ—Å—Ç–∞–≤–∫–µ
  async getDeliveryInfo(marketplace: string): Promise<{
    cost: number;
    time: string;
    freeThreshold: number;
  }> {
    const deliveryInfo = {
      ozon: { cost: 299, time: '1-3 –¥–Ω—è', freeThreshold: 3000 },
      wildberries: { cost: 199, time: '1-2 –¥–Ω—è', freeThreshold: 2000 },
      lamoda: { cost: 399, time: '2-4 –¥–Ω—è', freeThreshold: 4000 }
    };
    
    return deliveryInfo[marketplace as keyof typeof deliveryInfo] || deliveryInfo.ozon;
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–µ
  async getProductDetails(productId: string): Promise<RealProduct | null> {
    const allProducts = [
      ...this.REAL_PRODUCTS.ozon,
      ...this.REAL_PRODUCTS.wildberries,
      ...this.REAL_PRODUCTS.lamoda
    ];
    
    return allProducts.find(product => product.id === productId) || null;
  }

  // –ü–æ–∏—Å–∫ –ø–æ—Ö–æ–∂–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤
  async getSimilarProducts(productId: string): Promise<RealProduct[]> {
    const product = await this.getProductDetails(productId);
    if (!product) return [];

    const allProducts = [
      ...this.REAL_PRODUCTS.ozon,
      ...this.REAL_PRODUCTS.wildberries,
      ...this.REAL_PRODUCTS.lamoda
    ];

    // –ò—â–µ–º —Ç–æ–≤–∞—Ä—ã —Ç–æ–π –∂–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –ø–æ—Ö–æ–∂–∏—Ö —Ü–≤–µ—Ç–æ–≤
    return allProducts
      .filter(p => p.id !== productId)
      .filter(p => p.category === product.category)
      .sort((a, b) => {
        // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Ç–æ–≤–∞—Ä–∞–º —Å –ø–æ—Ö–æ–∂–∏–º–∏ —Ü–≤–µ—Ç–∞–º–∏
        const aColorMatch = a.colors.some(color => product.colors.includes(color));
        const bColorMatch = b.colors.some(color => product.colors.includes(color));
        
        if (aColorMatch && !bColorMatch) return -1;
        if (!aColorMatch && bColorMatch) return 1;
        
        return b.rating - a.rating;
      })
      .slice(0, 6);
  }
}

export const realMarketplaceService = new RealMarketplaceService(); 