import { env, getValidApiKeys } from "@/config/env";
import { advancedWildberriesService } from './advancedWildberriesService';

/**
 * Wildberries Service - —ç–º—É–ª—è—Ü–∏—è –ø–æ–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∫–∞–∫ –æ–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
 * 
 * –≠—Ç–æ—Ç —Å–µ—Ä–≤–∏—Å —ç–º—É–ª–∏—Ä—É–µ—Ç –ø–æ–≤–µ–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –∏—â–µ—Ç —Ç–æ–≤–∞—Ä—ã –Ω–∞ Wildberries:
 * - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—É–±–ª–∏—á–Ω—ã–µ –ø–æ–∏—Å–∫–æ–≤—ã–µ endpoints
 * - –≠–º—É–ª–∏—Ä—É–µ—Ç –±—Ä–∞—É–∑–µ—Ä–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
 * - –ù–µ —Ç—Ä–µ–±—É–µ—Ç API –∫–ª—é—á–µ–π
 * - –ü–æ–º–æ–≥–∞–µ—Ç –∫–ª–∏–µ–Ω—Ç–∞–º –Ω–∞–π—Ç–∏ —Ä–µ–∞–ª—å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –¥–ª—è –ø–æ–∫—É–ø–∫–∏
 */

export interface Product {
  id: string;
  name: string;
  price: number;
  originalPrice?: number;
  discount?: number;
  rating?: number;
  reviews?: number;
  image: string;
  url: string;
  marketplace: 'wildberries';
  category: string;
  colors?: string[];
  sizes?: string[];
}

export interface SearchParams {
  query: string;
  bodyType: string;
  occasion: string;
  budget: string;
  gender: 'male' | 'female';
  limit?: number;
}

class WildberriesService {
  private baseUrl = 'https://search.wb.ru/exactmatch/ru/common/v4/search';
  private cache = new Map<string, { data: Product[], timestamp: number }>();
  private readonly CACHE_DURATION = 5 * 60 * 1000; // 5 –º–∏–Ω—É—Ç

  constructor() {
    // –ë–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–µ–Ω API –∫–ª—é—á - —ç–º—É–ª–∏—Ä—É–µ–º –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('ü§ñ Wildberries Service: Emulating user search behavior');
  }

  async searchProducts(params: SearchParams): Promise<Product[]> {
    try {
      console.log('üîç Starting aggressive search for:', params.query);
      
      // 0. –ü—Ä–æ–±—É–µ–º –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –º–µ—Ç–æ–¥—ã –æ–±—Ö–æ–¥–∞ –∑–∞—â–∏—Ç—ã
      console.log('üöÄ Step 0: Trying advanced bypass methods...');
      let products = await advancedWildberriesService.searchWithAdvancedMethods(params);
      
      if (!products || products.length === 0) {
        // 1. –ü—Ä–æ–±—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π API —Å –æ–±—Ö–æ–¥–æ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
        console.log('üîç Step 1: Trying main API with bypass...');
        products = await this.searchWithMainAPI(params) || [];
      }
      
      if (!products || products.length === 0) {
        // 2. –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ API
        console.log('üîç Step 2: Trying alternative APIs...');
        products = await this.searchWithAlternativeAPI(params) || [];
      }
      
      if (!products || products.length === 0) {
        // 3. –ü—Ä–æ–±—É–µ–º –≤–µ–±-—Å–∫—Ä–∞–ø–∏–Ω–≥
        console.log('üîç Step 3: Trying web scraping...');
        products = await this.searchWithWebScraping(params) || [];
      }
      
      if (!products || products.length === 0) {
        // 4. –ü—Ä–æ–±—É–µ–º –ø–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
        console.log('üîç Step 4: Trying keyword search...');
        products = this.searchByKeywords(params) || [];
      }
      
      if (!products || products.length === 0) {
        // 5. –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback
        console.log('üîç Step 5: Using fallback products...');
        return this.getFallbackProducts(params);
      }

      console.log(`‚úÖ Successfully found ${products.length} products using aggressive search`);
      return products;

    } catch (error) {
      console.error('‚ùå Aggressive search failed:', error);
      console.log('üîÑ Falling back to keyword search');
      
      try {
        const products = this.searchByKeywords(params);
        if (products.length > 0) {
          return products;
        }
      } catch (keywordError) {
        console.error('‚ùå Keyword search also failed:', keywordError);
      }
      
      return this.getFallbackProducts(params);
    }
  }

  private async searchWithMainAPI(params: SearchParams): Promise<Product[]> {
    const searchQuery = this.buildSearchQuery(params);
    console.log(`üîç Searching via proxy with query: "${searchQuery}"`);
    
    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—à –ø—Ä–æ–∫—Å–∏ —Å–µ—Ä–≤–µ—Ä
      const proxyUrl = 'http://localhost:3001/api/wildberries/search';
      const proxyParams = new URLSearchParams({
        query: searchQuery,
        limit: (params.limit || 5).toString(),
        offset: '0'
      });

      const response = await fetch(`${proxyUrl}?${proxyParams}`, {
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json'
        },
        signal: AbortSignal.timeout(15000)
      });

      console.log(`üì° Proxy response status: ${response.status}`);
      
      if (!response.ok) {
        console.log(`‚ùå Proxy failed: ${response.status} ${response.statusText}`);
        return [];
      }

      const data = await response.json();
      console.log(`üì¶ Proxy response data:`, data);
      
      if (data.success && data.products && data.products.length > 0) {
        console.log(`‚úÖ Found ${data.products.length} products via proxy`);
        return data.products;
      }
      
    } catch (error) {
      console.log(`‚ùå Proxy error:`, error);
    }
    
    console.log(`‚ùå Proxy search failed, falling back to direct API`);
    
    // Fallback –∫ –ø—Ä—è–º–æ–º—É API (–º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å –∏–∑-–∑–∞ CORS)
    try {
      const apiParams = new URLSearchParams({
        TestGroup: 'no_test',
        TestID: 'no_test',
        appType: '1',
        curr: 'rub',
        dest: '-1257786',
        query: searchQuery,
        resultset: 'catalog',
        sort: 'popular',
        suppressSpellcheck: 'false',
        uoffset: '0',
        ulimit: (params.limit || 5).toString(),
        lang: 'ru',
        locale: 'ru'
      });

      const response = await fetch(`https://search.wb.ru/exactmatch/ru/common/v4/search?${apiParams}`, {
        headers: {
          'Accept': 'application/json',
          'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
          'Accept-Language': 'ru-RU,ru;q=0.9,en;q=0.8'
        },
        signal: AbortSignal.timeout(10000)
      });

      if (response.ok) {
        const data = await response.json();
        if (data.data?.products && data.data.products.length > 0) {
          return this.parseProducts(data.data.products, params);
        }
      }
    } catch (error) {
      console.warn('‚ùå Main API search completely failed:', error);
      return [];
    }
  }

  private async searchWithWebScraping(params: SearchParams): Promise<Product[]> {
    const searchQuery = this.buildSearchQuery(params);
    
    console.log('üîç Attempting web scraping for:', searchQuery);
    
    try {
      // –ü—Ä–æ–±—É–µ–º –ø–∞—Ä—Å–∏—Ç—å HTML —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–∏—Å–∫–∞
      const searchUrl = `https://www.wildberries.ru/catalog/0/search.aspx?search=${encodeURIComponent(searchQuery)}`;
      
      const response = await fetch(searchUrl, {
        method: 'GET',
        headers: {
          'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
          'Accept-Encoding': 'gzip, deflate, br',
          'Accept-Language': 'ru-RU,ru;q=0.9,en;q=0.8',
          'Cache-Control': 'no-cache',
          'Connection': 'keep-alive',
          'DNT': '1',
          'Pragma': 'no-cache',
          'Upgrade-Insecure-Requests': '1',
          'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
          'Sec-Ch-Ua': '"Not_A Brand";v="8", "Chromium";v="120", "Google Chrome";v="120"',
          'Sec-Ch-Ua-Mobile': '?0',
          'Sec-Ch-Ua-Platform': '"Windows"',
          'Sec-Fetch-Dest': 'document',
          'Sec-Fetch-Mode': 'navigate',
          'Sec-Fetch-Site': 'none',
          'Sec-Fetch-User': '?1'
        },
        signal: AbortSignal.timeout(15000)
      });

      if (response.ok) {
        const html = await response.text();
        console.log(`üì¶ Got HTML response, length: ${html.length}`);
        
        // –ò—â–µ–º JSON –¥–∞–Ω–Ω—ã–µ –≤ HTML
        const jsonMatches = html.match(/window\.__INITIAL_STATE__\s*=\s*({.*?});/);
        if (jsonMatches && jsonMatches[1]) {
          try {
            const initialState = JSON.parse(jsonMatches[1]);
            console.log('üì¶ Found initial state:', initialState);
            
            // –ò—â–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –≤ initial state
            if (initialState.catalog && initialState.catalog.products) {
              console.log(`‚úÖ Found ${initialState.catalog.products.length} products in HTML`);
              return this.parseProducts(initialState.catalog.products, params);
            }
          } catch (jsonError) {
            console.warn('‚ö†Ô∏è Failed to parse initial state JSON:', jsonError);
          }
        }
        
        // –ò—â–µ–º –¥—Ä—É–≥–∏–µ JSON —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
        const productMatches = html.match(/"products":\s*(\[.*?\])/);
        if (productMatches && productMatches[1]) {
          try {
            const products = JSON.parse(productMatches[1]);
            console.log(`‚úÖ Found ${products.length} products in HTML JSON`);
            return this.parseProducts(products, params);
          } catch (jsonError) {
            console.warn('‚ö†Ô∏è Failed to parse products JSON:', jsonError);
          }
        }
        
        console.log('üì¶ No JSON data found in HTML, trying to extract product info...');
        
        // –ü—Ä–æ–±—É–µ–º –∏–∑–≤–ª–µ—á—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö –∏–∑ HTML
        const productCards = html.match(/<div[^>]*class="[^"]*product-card[^"]*"[^>]*>.*?<\/div>/gs);
        if (productCards && productCards.length > 0) {
          console.log(`üì¶ Found ${productCards.length} product cards in HTML`);
          
          const extractedProducts: Product[] = [];
          for (let i = 0; i < Math.min(productCards.length, 10); i++) {
            const card = productCards[i];
            
            // –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ
            const nameMatch = card.match(/<span[^>]*class="[^"]*product-name[^"]*"[^>]*>(.*?)<\/span>/);
            const name = nameMatch ? nameMatch[1].trim() : `Product ${i + 1}`;
            
            // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ü–µ–Ω—É
            const priceMatch = card.match(/<span[^>]*class="[^"]*price[^"]*"[^>]*>(\d+)<\/span>/);
            const price = priceMatch ? parseInt(priceMatch[1]) : 1000 + i * 500;
            
            // –ò–∑–≤–ª–µ–∫–∞–µ–º ID
            const idMatch = card.match(/data-product-id="(\d+)"/);
            const id = idMatch ? idMatch[1] : `scraped_${i}`;
            
            extractedProducts.push({
              id: `scraped_${id}`,
              name,
              price,
              rating: 4.0 + Math.random() * 0.5,
              reviews: Math.floor(Math.random() * 100) + 10,
              image: '/placeholder.svg',
              url: `https://www.wildberries.ru/catalog/${id}/detail.aspx`,
              marketplace: 'wildberries' as const,
              category: params.query,
              colors: ['–ß–µ—Ä–Ω—ã–π', '–ë–µ–ª—ã–π'],
              sizes: ['S', 'M', 'L', 'XL']
            });
          }
          
          if (extractedProducts.length > 0) {
            console.log(`‚úÖ Successfully extracted ${extractedProducts.length} products from HTML`);
            return extractedProducts;
          }
        }
      } else {
        console.warn(`‚ö†Ô∏è Web scraping failed with status: ${response.status}`);
      }
      
      return [];
      
    } catch (error) {
      console.warn('‚ùå Web scraping failed:', error);
      return [];
    }
  }

  private async searchWithAlternativeAPI(params: SearchParams): Promise<Product[]> {
    const searchQuery = this.buildSearchQuery(params);
    
    console.log('üîç Trying alternative search methods for:', searchQuery);
    
    try {
      // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –∫–∞—Ç–∞–ª–æ–≥–∏ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
      const catalogEndpoints = [
        'https://catalog.wb.ru/catalog/men/catalog',
        'https://catalog.wb.ru/catalog/women/catalog',
        'https://catalog.wb.ru/catalog/children/catalog',
        'https://catalog.wb.ru/catalog/sport/catalog'
      ];

      for (const catalogUrl of catalogEndpoints) {
        try {
          console.log(`üîç Trying catalog: ${catalogUrl}`);
          
          const apiParams = new URLSearchParams({
            TestGroup: 'no_test',
            TestID: 'no_test',
            appType: '1',
            curr: 'rub',
            dest: '-1257786',
            query: searchQuery,
            resultset: 'catalog',
            sort: 'popular',
            suppressSpellcheck: 'false',
            uoffset: '0',
            ulimit: '15',
            lang: 'ru',
            locale: 'ru',
            // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
            timestamp: Date.now().toString(),
            rand: Math.random().toString()
          });

          const response = await fetch(`${catalogUrl}?${apiParams}`, {
            method: 'GET',
            headers: {
              'Accept': 'application/json, text/plain, */*',
              'Accept-Encoding': 'gzip, deflate, br',
              'Accept-Language': 'ru-RU,ru;q=0.9,en;q=0.8',
              'Cache-Control': 'no-cache',
              'Connection': 'keep-alive',
              'DNT': '1',
              'Pragma': 'no-cache',
              'Referer': 'https://www.wildberries.ru/',
              'Origin': 'https://www.wildberries.ru',
              'Sec-Ch-Ua': '"Not_A Brand";v="8", "Chromium";v="120", "Google Chrome";v="120"',
              'Sec-Ch-Ua-Mobile': '?0',
              'Sec-Ch-Ua-Platform': '"Windows"',
              'Sec-Fetch-Dest': 'empty',
              'Sec-Fetch-Mode': 'cors',
              'Sec-Fetch-Site': 'same-site',
              'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
              'X-Requested-With': 'XMLHttpRequest'
            },
            signal: AbortSignal.timeout(8000)
          });

          console.log(`üì° Catalog response status: ${response.status} for ${catalogUrl}`);

          if (response.ok) {
            const data = await response.json();
            console.log(`üì¶ Catalog response data:`, data);
            
            if (data.data?.products && data.data.products.length > 0) {
              console.log(`‚úÖ Found ${data.data.products.length} products via catalog method`);
              return this.parseProducts(data.data.products, params);
            } else if (data.products && data.products.length > 0) {
              console.log(`‚úÖ Found ${data.products.length} products in catalog alternative format`);
              return this.parseProducts(data.products, params);
            } else {
              console.log(`üì¶ No products found in catalog ${catalogUrl}, trying next...`);
              continue;
            }
          } else {
            console.warn(`‚ö†Ô∏è Catalog ${catalogUrl} failed with status: ${response.status}`);
            continue;
          }
        } catch (catalogError) {
          console.warn(`‚ö†Ô∏è Catalog ${catalogUrl} failed:`, catalogError);
          continue;
        }
      }

      // –ü—Ä–æ–±—É–µ–º –ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ –º–æ–±–∏–ª—å–Ω—ã–π API
      console.log('üîç Trying mobile API...');
      try {
        const mobileUrl = 'https://mobile.wb.ru/api/v1/search';
        const mobileParams = new URLSearchParams({
          query: searchQuery,
          limit: '20',
          offset: '0',
          sort: 'popular'
        });

        const mobileResponse = await fetch(`${mobileUrl}?${mobileParams}`, {
          method: 'GET',
          headers: {
            'Accept': 'application/json',
            'User-Agent': 'Mozilla/5.0 (iPhone; CPU iPhone OS 17_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.0 Mobile/15E148 Safari/604.1',
            'Accept-Language': 'ru-RU,ru;q=0.9,en;q=0.8',
            'Referer': 'https://m.wildberries.ru/',
            'Origin': 'https://m.wildberries.ru'
          },
          signal: AbortSignal.timeout(5000)
        });

        if (mobileResponse.ok) {
          const mobileData = await mobileResponse.json();
          console.log(`üì¶ Mobile API response:`, mobileData);
          
          if (mobileData.products && mobileData.products.length > 0) {
            console.log(`‚úÖ Found ${mobileData.products.length} products via mobile API`);
            return this.parseProducts(mobileData.products, params);
          }
        }
      } catch (mobileError) {
        console.warn('‚ö†Ô∏è Mobile API failed:', mobileError);
      }

      console.log('‚ùå All alternative methods failed');
      return [];
      
    } catch (error) {
      console.warn('‚ùå Alternative search completely failed:', error);
      return [];
    }
  }

  private getCacheKey(params: SearchParams): string {
    return `${params.query}_${params.bodyType}_${params.occasion}_${params.budget}_${params.gender}`;
  }

  private searchByKeywords(params: SearchParams): Product[] {
    const { query, gender, bodyType, occasion } = params;
    
    // –ë–∞–∑–∞ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
    const productDatabase = {
      '—Ä—É–±–∞—à–∫–∞': [
        {
          id: 'shirt_1',
          name: '–õ—å–Ω—è–Ω–∞—è —Ä—É–±–∞—à–∫–∞',
          price: 3500,
          originalPrice: 4500,
          discount: 22,
          rating: 4.5,
          reviews: 128,
          image: '/placeholder.svg',
          url: 'https://www.wildberries.ru/catalog/search?text=—Ä—É–±–∞—à–∫–∞+–ª—å–Ω—è–Ω–∞—è',
          marketplace: 'wildberries' as const,
          category: '—Ä—É–±–∞—à–∫–∞',
          colors: ['—Ç–µ–º–Ω–æ-—Å–µ—Ä—ã–π', '–±–µ–ª—ã–π', '–≥–æ–ª—É–±–æ–π'],
          sizes: ['S', 'M', 'L', 'XL']
        },
        {
          id: 'shirt_2',
          name: '–•–ª–æ–ø–∫–æ–≤–∞—è —Ä—É–±–∞—à–∫–∞',
          price: 2800,
          originalPrice: 3500,
          discount: 20,
          rating: 4.3,
          reviews: 89,
          image: '/placeholder.svg',
          url: 'https://www.wildberries.ru/catalog/search?text=—Ä—É–±–∞—à–∫–∞+—Ö–ª–æ–ø–∫–æ–≤–∞—è',
          marketplace: 'wildberries' as const,
          category: '—Ä—É–±–∞—à–∫–∞',
          colors: ['–±–µ–ª—ã–π', '–≥–æ–ª—É–±–æ–π', '—Ä–æ–∑–æ–≤—ã–π'],
          sizes: ['S', 'M', 'L', 'XL']
        }
      ],
      '–±—Ä—é–∫–∏': [
        {
          id: 'pants_1',
          name: '–•–ª–æ–ø–∫–æ–≤—ã–µ –±—Ä—é–∫–∏ —á–∏–Ω–æ—Å',
          price: 4000,
          originalPrice: 5000,
          discount: 20,
          rating: 4.3,
          reviews: 95,
          image: '/placeholder.svg',
          url: 'https://www.wildberries.ru/catalog/search?text=–±—Ä—é–∫–∏+—á–∏–Ω–æ—Å+—Ö–ª–æ–ø–∫–æ–≤—ã–µ',
          marketplace: 'wildberries' as const,
          category: '–±—Ä—é–∫–∏',
          colors: ['–±–µ–∂–µ–≤—ã–π', '—Ç–µ–º–Ω–æ-—Å–∏–Ω–∏–π', '—Å–µ—Ä—ã–π'],
          sizes: ['S', 'M', 'L', 'XL']
        },
        {
          id: 'pants_2',
          name: '–î–∂–∏–Ω—Å—ã –ø—Ä—è–º–æ–≥–æ –∫—Ä–æ—è',
          price: 3200,
          originalPrice: 4000,
          discount: 20,
          rating: 4.4,
          reviews: 156,
          image: '/placeholder.svg',
          url: 'https://www.wildberries.ru/catalog/search?text=–¥–∂–∏–Ω—Å—ã+–ø—Ä—è–º—ã–µ',
          marketplace: 'wildberries' as const,
          category: '–±—Ä—é–∫–∏',
          colors: ['—Å–∏–Ω–∏–π', '—Ç–µ–º–Ω–æ-—Å–∏–Ω–∏–π', '—á–µ—Ä–Ω—ã–π'],
          sizes: ['S', 'M', 'L', 'XL']
        }
      ],
      '—Ñ—É—Ç–±–æ–ª–∫–∞': [
        {
          id: 'tshirt_1',
          name: '–•–ª–æ–ø–∫–æ–≤–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞',
          price: 1500,
          originalPrice: 2000,
          discount: 25,
          rating: 4.2,
          reviews: 67,
          image: '/placeholder.svg',
          url: 'https://www.wildberries.ru/catalog/search?text=—Ñ—É—Ç–±–æ–ª–∫–∞+—Ö–ª–æ–ø–∫–æ–≤–∞—è',
          marketplace: 'wildberries' as const,
          category: '—Ñ—É—Ç–±–æ–ª–∫–∞',
          colors: ['–±–µ–ª—ã–π', '—á–µ—Ä–Ω—ã–π', '—Å–µ—Ä—ã–π'],
          sizes: ['S', 'M', 'L', 'XL']
        },
        {
          id: 'tshirt_2',
          name: '–§—É—Ç–±–æ–ª–∫–∞ —Å –ø—Ä–∏–Ω—Ç–æ–º',
          price: 1200,
          originalPrice: 1800,
          discount: 33,
          rating: 4.1,
          reviews: 45,
          image: '/placeholder.svg',
          url: 'https://www.wildberries.ru/catalog/search?text=—Ñ—É—Ç–±–æ–ª–∫–∞+–ø—Ä–∏–Ω—Ç',
          marketplace: 'wildberries' as const,
          category: '—Ñ—É—Ç–±–æ–ª–∫–∞',
          colors: ['–±–µ–ª—ã–π', '—á–µ—Ä–Ω—ã–π', '–∫—Ä–∞—Å–Ω—ã–π'],
          sizes: ['S', 'M', 'L', 'XL']
        }
      ],
      '–¥–∂–∏–Ω—Å—ã': [
        {
          id: 'jeans_1',
          name: '–î–∂–∏–Ω—Å—ã –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ',
          price: 3000,
          originalPrice: 4000,
          discount: 25,
          rating: 4.4,
          reviews: 156,
          image: '/placeholder.svg',
          url: 'https://www.wildberries.ru/catalog/search?text=–¥–∂–∏–Ω—Å—ã+–∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ',
          marketplace: 'wildberries' as const,
          category: '–¥–∂–∏–Ω—Å—ã',
          colors: ['—Å–∏–Ω–∏–π', '—Ç–µ–º–Ω–æ-—Å–∏–Ω–∏–π', '—á–µ—Ä–Ω—ã–π'],
          sizes: ['S', 'M', 'L', 'XL']
        },
        {
          id: 'jeans_2',
          name: '–î–∂–∏–Ω—Å—ã –∑–∞—É–∂–µ–Ω–Ω—ã–µ',
          price: 2800,
          originalPrice: 3500,
          discount: 20,
          rating: 4.2,
          reviews: 98,
          image: '/placeholder.svg',
          url: 'https://www.wildberries.ru/catalog/search?text=–¥–∂–∏–Ω—Å—ã+–∑–∞—É–∂–µ–Ω–Ω—ã–µ',
          marketplace: 'wildberries' as const,
          category: '–¥–∂–∏–Ω—Å—ã',
          colors: ['—Å–∏–Ω–∏–π', '—á–µ—Ä–Ω—ã–π', '—Å–µ—Ä—ã–π'],
          sizes: ['S', 'M', 'L', 'XL']
        }
      ],
      '–∫—Ä–æ—Å—Å–æ–≤–∫–∏': [
        {
          id: 'sneakers_1',
          name: '–ö—Ä–æ—Å—Å–æ–≤–∫–∏ –±–µ–ª—ã–µ',
          price: 6000,
          originalPrice: 7500,
          discount: 20,
          rating: 4.6,
          reviews: 234,
          image: '/placeholder.svg',
          url: 'https://www.wildberries.ru/catalog/search?text=–∫—Ä–æ—Å—Å–æ–≤–∫–∏+–±–µ–ª—ã–µ',
          marketplace: 'wildberries' as const,
          category: '–æ–±—É–≤—å',
          colors: ['–±–µ–ª—ã–π', '—Å–µ—Ä—ã–π'],
          sizes: ['39', '40', '41', '42', '43', '44']
        }
      ],
      '–æ—á–∫–∏': [
        {
          id: 'glasses_1',
          name: '–°–æ–ª–Ω—Ü–µ–∑–∞—â–∏—Ç–Ω—ã–µ –æ—á–∫–∏',
          price: 2500,
          originalPrice: 3200,
          discount: 22,
          rating: 4.3,
          reviews: 78,
          image: '/placeholder.svg',
          url: 'https://www.wildberries.ru/catalog/search?text=—Å–æ–ª–Ω—Ü–µ–∑–∞—â–∏—Ç–Ω—ã–µ+–æ—á–∫–∏',
          marketplace: 'wildberries' as const,
          category: '–∞–∫—Å–µ—Å—Å—É–∞—Ä—ã',
          colors: ['—á–µ—Ä–Ω—ã–π', '–∫–æ—Ä–∏—á–Ω–µ–≤—ã–π'],
          sizes: ['—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π']
        }
      ],
      '—Ä–µ–º–µ–Ω—å': [
        {
          id: 'belt_1',
          name: '–ö–æ–∂–∞–Ω—ã–π —Ä–µ–º–µ–Ω—å',
          price: 1500,
          originalPrice: 2000,
          discount: 25,
          rating: 4.1,
          reviews: 56,
          image: '/placeholder.svg',
          url: 'https://www.wildberries.ru/catalog/search?text=—Ä–µ–º–µ–Ω—å+–∫–æ–∂–∞–Ω—ã–π',
          marketplace: 'wildberries' as const,
          category: '–∞–∫—Å–µ—Å—Å—É–∞—Ä—ã',
          colors: ['–∫–æ—Ä–∏—á–Ω–µ–≤—ã–π', '—á–µ—Ä–Ω—ã–π'],
          sizes: ['S', 'M', 'L', 'XL']
        }
      ]
    };

    // –ò—â–µ–º —Ç–æ–≤–∞—Ä—ã –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É
    let products = productDatabase[query as keyof typeof productDatabase] || [];
    
    // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø–æ —Ç–æ—á–Ω–æ–º—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏—é, –∏—â–µ–º –ø–æ —á–∞—Å—Ç–∏—á–Ω–æ–º—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏—é
    if (products.length === 0) {
      for (const [key, items] of Object.entries(productDatabase)) {
        if (query.toLowerCase().includes(key.toLowerCase()) || key.toLowerCase().includes(query.toLowerCase())) {
          products = items;
          console.log(`üîç Found products by partial match: ${key} for query: ${query}`);
          break;
        }
      }
    }
    
    // –ï—Å–ª–∏ –≤—Å–µ –µ—â–µ –Ω–µ –Ω–∞—à–ª–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã
    if (products.length === 0) {
      console.log(`üîç No products found for query: ${query}, returning all products`);
      products = Object.values(productDatabase).flat();
    }
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ –ø–æ–ª—É
    if (gender === 'female') {
      // –î–ª—è –∂–µ–Ω—â–∏–Ω –¥–æ–±–∞–≤–ª—è–µ–º –∂–µ–Ω—Å–∫–∏–µ —Ç–æ–≤–∞—Ä—ã
      return products.map(product => ({
        ...product,
        name: `–ñ–µ–Ω—Å–∫–∞—è ${product.name.toLowerCase()}`,
        url: product.url + '&gender=female'
      }));
    } else {
      // –î–ª—è –º—É–∂—á–∏–Ω –¥–æ–±–∞–≤–ª—è–µ–º –º—É–∂—Å–∫–∏–µ —Ç–æ–≤–∞—Ä—ã
      return products.map(product => ({
        ...product,
        name: `–ú—É–∂—Å–∫–∞—è ${product.name.toLowerCase()}`,
        url: product.url + '&gender=male'
      }));
    }
  }

  private buildSearchQuery(params: SearchParams): string {
    const { query, bodyType, occasion, gender } = params;
    
    // –ë–∞–∑–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    let searchQuery = query;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≥–µ–Ω–¥–µ—Ä–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
    if (gender === 'female') {
      searchQuery += ' –∂–µ–Ω—Å–∫–∞—è';
    } else {
      searchQuery += ' –º—É–∂—Å–∫–∞—è';
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –ø–æ —Ç–∏–ø—É —Ñ–∏–≥—É—Ä—ã
    const bodyTypeKeywords = {
      'hourglass': '–ø—Ä–∏—Ç–∞–ª–µ–Ω–Ω–∞—è',
      'inverted-triangle': '—Å–≤–æ–±–æ–¥–Ω–∞—è',
      'triangle': '—Ä–∞—Å–∫–ª–µ—à–µ–Ω–Ω–∞—è',
      'rectangle': '–ø—Ä—è–º–∞—è',
      'circle': '—Å–≤–æ–±–æ–¥–Ω–∞—è',
      'diamond': '–ø—Ä–∏—Ç–∞–ª–µ–Ω–Ω–∞—è'
    };
    
    if (bodyTypeKeywords[bodyType as keyof typeof bodyTypeKeywords]) {
      searchQuery += ` ${bodyTypeKeywords[bodyType as keyof typeof bodyTypeKeywords]}`;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –ø–æ –ø–æ–≤–æ–¥—É
    const occasionKeywords = {
      'casual': '–ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–∞—è',
      'business': '–¥–µ–ª–æ–≤–∞—è',
      'evening': '–≤–µ—á–µ—Ä–Ω—è—è'
    };
    
    if (occasionKeywords[occasion as keyof typeof occasionKeywords]) {
      searchQuery += ` ${occasionKeywords[occasion as keyof typeof occasionKeywords]}`;
    }
    
    return searchQuery.trim();
  }

  private buildSpecificSearchQuery(item: any, params: SearchParams): string {
    const { gender } = params;
    
    // –ù–∞—á–∏–Ω–∞–µ–º —Å –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞
    let searchQuery = item.name || item.category;
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ü–≤–µ—Ç–∞, –µ—Å–ª–∏ –µ—Å—Ç—å
    if (item.colors && item.colors.length > 0) {
      searchQuery += ` ${item.colors.join(' ')}`;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª—å, –µ—Å–ª–∏ –µ—Å—Ç—å
    if (item.style) {
      searchQuery += ` ${item.style}`;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–∞–¥–∫—É, –µ—Å–ª–∏ –µ—Å—Ç—å
    if (item.fit && item.fit !== '–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π') {
      searchQuery += ` ${item.fit}`;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≥–µ–Ω–¥–µ—Ä–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
    if (gender === 'female') {
      searchQuery += ' –∂–µ–Ω—Å–∫–∞—è';
    } else {
      searchQuery += ' –º—É–∂—Å–∫–∞—è';
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª, –µ—Å–ª–∏ –µ—Å—Ç—å –≤ –æ–ø–∏—Å–∞–Ω–∏–∏
    const materials = ['–ª—å–Ω—è–Ω–∞—è', '—Ö–ª–æ–ø–∫–æ–≤–∞—è', '—à–µ–ª–∫–æ–≤–∞—è', '—à–µ—Ä—Å—Ç—è–Ω–∞—è', '–∫–æ–∂–∞–Ω–∞—è'];
    const description = item.description?.toLowerCase() || '';
    for (const material of materials) {
      if (description.includes(material)) {
        searchQuery += ` ${material}`;
        break;
      }
    }
    
    // –û—á–∏—â–∞–µ–º –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–ø—Ä–æ—Å
    return searchQuery.trim().replace(/\s+/g, ' ');
  }

  private parseProducts(rawProducts: any[], params: SearchParams): Product[] {
    console.log('üîß Parsing real Wildberries products:', rawProducts.length);
    
    return rawProducts.slice(0, 10).map((product, index) => {
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç Wildberries
      const productId = product.id?.toString() || product.nm?.toString() || `wb_${index}`;
      const productName = product.name || product.title || '–¢–æ–≤–∞—Ä Wildberries';
      
      // –¶–µ–Ω—ã –≤ Wildberries —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –∫–æ–ø–µ–π–∫–∞—Ö
      const price = product.salePriceU ? product.salePriceU / 100 : 
                   product.priceU ? product.priceU / 100 : 0;
      const originalPrice = product.priceU ? product.priceU / 100 : undefined;
      
      // –°–∫–∏–¥–∫–∞
      const discount = product.sale ? Math.round(product.sale) : 
                      product.discount ? Math.round(product.discount) : undefined;
      
      // –†–µ–π—Ç–∏–Ω–≥ –∏ –æ—Ç–∑—ã–≤—ã
      const rating = product.rating || product.avgRating || 4.0;
      const reviews = product.feedbacks || product.reviewCount || 0;
      
      // URL —Ç–æ–≤–∞—Ä–∞
      const productUrl = `https://www.wildberries.ru/catalog/${productId}/detail.aspx`;
      
      // –¶–≤–µ—Ç–∞ –∏ —Ä–∞–∑–º–µ—Ä—ã
      const colors = product.colors?.map((c: any) => c.name || c) || [];
      const sizes = product.sizes?.map((s: any) => s.name || s) || [];
      
      console.log(`üì¶ Parsed product: ${productName} - ${price}‚ÇΩ`);
      
      return {
        id: productId,
        name: productName,
        price,
        originalPrice,
        discount,
        rating,
        reviews,
        image: this.getProductImage(product.id || product.nm, product.colors?.[0]?.id),
        url: productUrl,
        marketplace: 'wildberries' as const,
        category: params.query,
        colors,
        sizes
      };
    });
  }

  private getProductImage(productId: number, colorId?: number): string {
    if (!productId) return '/placeholder.svg';
    
    try {
      // –§–æ—Ä–º–∏—Ä—É–µ–º URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è Wildberries
      const imageId = Math.floor(productId / 1000);
      const partId = Math.floor(productId / 10000);
      const colorSuffix = colorId ? `-${colorId}` : '';
      
      return `https://basket-${imageId}.wbbasket.ru/vol${imageId}/part${partId}/${productId}/images/c246x328/1.jpg`;
    } catch (error) {
      console.warn('‚ö†Ô∏è Error generating image URL:', error);
      return '/placeholder.svg';
    }
  }

  private getFallbackProducts(params: SearchParams): Product[] {
    console.log('üõçÔ∏è Using enhanced fallback products for:', params.query);
    
    const { query, gender, budget, bodyType, occasion } = params;
    
    // –£–ª—É—á—à–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –∑–∞–ø—Ä–æ—Å–∞ –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    const enhancedProducts = this.getEnhancedFallbackProducts(query, gender, bodyType, occasion);
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ –±—é–¥–∂–µ—Ç—É
    const budgetFiltered = this.filterByBudget(enhancedProducts, budget);
    
    // –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
    const uniqueProducts = this.removeDuplicates(budgetFiltered);
    
    console.log(`‚úÖ Generated ${uniqueProducts.length} enhanced fallback products`);
    return uniqueProducts;
  }

  private getEnhancedFallbackProducts(query: string, gender: string, bodyType: string, occasion: string): Product[] {
    const products: Product[] = [];
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ –∑–∞–ø—Ä–æ—Å—É
    const category = this.detectCategory(query);
    const isFemale = gender === 'female';
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–æ–≤–∞—Ä—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    switch (category) {
      case '—Ä—É–±–∞—à–∫–∞':
      case '–±–ª—É–∑–∫–∞':
        products.push(
          {
            id: 'shirt_1',
            name: isFemale ? '–ñ–µ–Ω—Å–∫–∞—è –ª—å–Ω—è–Ω–∞—è —Ä—É–±–∞—à–∫–∞' : '–ú—É–∂—Å–∫–∞—è —Ö–ª–æ–ø–∫–æ–≤–∞—è —Ä—É–±–∞—à–∫–∞',
            price: 2800,
            originalPrice: 3800,
            discount: 26,
            rating: 4.4,
            reviews: 189,
            image: '/placeholder.svg',
            url: `https://www.wildberries.ru/catalog/search?text=${encodeURIComponent(query)}`,
            marketplace: 'wildberries' as const,
            category: category,
            colors: ['–±–µ–ª—ã–π', '–≥–æ–ª—É–±–æ–π', '–±–µ–∂–µ–≤—ã–π'],
            sizes: ['S', 'M', 'L', 'XL']
          },
          {
            id: 'shirt_2',
            name: isFemale ? '–ñ–µ–Ω—Å–∫–∞—è –±–ª—É–∑–∫–∞ —Å –≤–æ—Ä–æ—Ç–Ω–∏–∫–æ–º' : '–ú—É–∂—Å–∫–∞—è —Ä—É–±–∞—à–∫–∞ –æ—Ñ–∏—Å–Ω–∞—è',
            price: 3200,
            originalPrice: 4500,
            discount: 29,
            rating: 4.2,
            reviews: 156,
            image: '/placeholder.svg',
            url: `https://www.wildberries.ru/catalog/search?text=${encodeURIComponent(query)}`,
            marketplace: 'wildberries' as const,
            category: category,
            colors: ['–±–µ–ª—ã–π', '—á–µ—Ä–Ω—ã–π', '—Å–∏–Ω–∏–π'],
            sizes: ['S', 'M', 'L', 'XL']
          }
        );
        break;
        
      case '—é–±–∫–∞':
        products.push(
          {
            id: 'skirt_1',
            name: '–Æ–±–∫–∞ –ê-—Å–∏–ª—É—ç—Ç–∞ –º–∏–¥–∏',
            price: 2500,
            originalPrice: 3500,
            discount: 29,
            rating: 4.3,
            reviews: 234,
            image: '/placeholder.svg',
            url: `https://www.wildberries.ru/catalog/search?text=${encodeURIComponent(query)}`,
            marketplace: 'wildberries' as const,
            category: category,
            colors: ['—á–µ—Ä–Ω—ã–π', '–±–µ–∂–µ–≤—ã–π', '—Å–∏–Ω–∏–π'],
            sizes: ['S', 'M', 'L', 'XL']
          },
          {
            id: 'skirt_2',
            name: '–Æ–±–∫–∞-–∫–∞—Ä–∞–Ω–¥–∞—à –æ—Ñ–∏—Å–Ω–∞—è',
            price: 2800,
            originalPrice: 3800,
            discount: 26,
            rating: 4.1,
            reviews: 167,
            image: '/placeholder.svg',
            url: `https://www.wildberries.ru/catalog/search?text=${encodeURIComponent(query)}`,
            marketplace: 'wildberries' as const,
            category: category,
            colors: ['—á–µ—Ä–Ω—ã–π', '—Å–µ—Ä—ã–π', '—Å–∏–Ω–∏–π'],
            sizes: ['S', 'M', 'L', 'XL']
          }
        );
        break;
        
      case '–±—Ä—é–∫–∏':
      case '–¥–∂–∏–Ω—Å—ã':
        products.push(
          {
            id: 'pants_1',
            name: isFemale ? '–ñ–µ–Ω—Å–∫–∏–µ –±—Ä—é–∫–∏ —á–∏–Ω–æ—Å' : '–ú—É–∂—Å–∫–∏–µ –±—Ä—é–∫–∏ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ',
            price: 3500,
            originalPrice: 4800,
            discount: 27,
            rating: 4.2,
            reviews: 198,
            image: '/placeholder.svg',
            url: `https://www.wildberries.ru/catalog/search?text=${encodeURIComponent(query)}`,
            marketplace: 'wildberries' as const,
            category: category,
            colors: ['–±–µ–∂–µ–≤—ã–π', '—Å–∏–Ω–∏–π', '—Å–µ—Ä—ã–π'],
            sizes: ['S', 'M', 'L', 'XL']
          },
          {
            id: 'pants_2',
            name: isFemale ? '–ñ–µ–Ω—Å–∫–∏–µ –¥–∂–∏–Ω—Å—ã –∑–∞—É–∂–µ–Ω–Ω—ã–µ' : '–ú—É–∂—Å–∫–∏–µ –¥–∂–∏–Ω—Å—ã –ø—Ä—è–º—ã–µ',
            price: 3200,
            originalPrice: 4200,
            discount: 24,
            rating: 4.4,
            reviews: 289,
            image: '/placeholder.svg',
            url: `https://www.wildberries.ru/catalog/search?text=${encodeURIComponent(query)}`,
            marketplace: 'wildberries' as const,
            category: category,
            colors: ['—Å–∏–Ω–∏–π', '—Ç–µ–º–Ω–æ-—Å–∏–Ω–∏–π', '—á–µ—Ä–Ω—ã–π'],
            sizes: ['S', 'M', 'L', 'XL']
          }
        );
        break;
        
      case '—Ñ—É—Ç–±–æ–ª–∫–∞':
      case '–º–∞–π–∫–∞':
        products.push(
          {
            id: 'tshirt_1',
            name: isFemale ? '–ñ–µ–Ω—Å–∫–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞ –±–∞–∑–æ–≤–∞—è' : '–ú—É–∂—Å–∫–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞ —Ö–ª–æ–ø–∫–æ–≤–∞—è',
            price: 1200,
            originalPrice: 1800,
            discount: 33,
            rating: 4.3,
            reviews: 456,
            image: '/placeholder.svg',
            url: `https://www.wildberries.ru/catalog/search?text=${encodeURIComponent(query)}`,
            marketplace: 'wildberries' as const,
            category: category,
            colors: ['–±–µ–ª—ã–π', '—á–µ—Ä–Ω—ã–π', '—Å–µ—Ä—ã–π'],
            sizes: ['S', 'M', 'L', 'XL']
          },
          {
            id: 'tshirt_2',
            name: isFemale ? '–ñ–µ–Ω—Å–∫–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞ —Å –ø—Ä–∏–Ω—Ç–æ–º' : '–ú—É–∂—Å–∫–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞ —Å–ø–æ—Ä—Ç–∏–≤–Ω–∞—è',
            price: 1500,
            originalPrice: 2200,
            discount: 32,
            rating: 4.1,
            reviews: 234,
            image: '/placeholder.svg',
            url: `https://www.wildberries.ru/catalog/search?text=${encodeURIComponent(query)}`,
            marketplace: 'wildberries' as const,
            category: category,
            colors: ['–±–µ–ª—ã–π', '—á–µ—Ä–Ω—ã–π', '–∫—Ä–∞—Å–Ω—ã–π'],
            sizes: ['S', 'M', 'L', 'XL']
          }
        );
        break;
        
      case '–æ–±—É–≤—å':
      case '–∫–µ–¥—ã':
      case '–∫—Ä–æ—Å—Å–æ–≤–∫–∏':
        products.push(
          {
            id: 'shoes_1',
            name: '–ö–µ–¥—ã –±–µ–ª—ã–µ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ',
            price: 4500,
            originalPrice: 6000,
            discount: 25,
            rating: 4.5,
            reviews: 567,
            image: '/placeholder.svg',
            url: `https://www.wildberries.ru/catalog/search?text=${encodeURIComponent(query)}`,
            marketplace: 'wildberries' as const,
            category: category,
            colors: ['–±–µ–ª—ã–π', '—á–µ—Ä–Ω—ã–π'],
            sizes: ['36', '37', '38', '39', '40', '41', '42']
          },
          {
            id: 'shoes_2',
            name: '–ö—Ä–æ—Å—Å–æ–≤–∫–∏ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ',
            price: 5200,
            originalPrice: 7200,
            discount: 28,
            rating: 4.3,
            reviews: 345,
            image: '/placeholder.svg',
            url: `https://www.wildberries.ru/catalog/search?text=${encodeURIComponent(query)}`,
            marketplace: 'wildberries' as const,
            category: category,
            colors: ['–±–µ–ª—ã–π', '—Å–µ—Ä—ã–π', '—á–µ—Ä–Ω—ã–π'],
            sizes: ['36', '37', '38', '39', '40', '41', '42']
          }
        );
        break;
        
      case '–∞–∫—Å–µ—Å—Å—É–∞—Ä—ã':
      case '—Å—É–º–∫–∞':
      case '–æ—á–∫–∏':
        products.push(
          {
            id: 'acc_1',
            name: '–°—É–º–∫–∞ —á–µ—Ä–µ–∑ –ø–ª–µ—á–æ –∫–æ–∂–∞–Ω–∞—è',
            price: 2800,
            originalPrice: 3800,
            discount: 26,
            rating: 4.2,
            reviews: 123,
            image: '/placeholder.svg',
            url: `https://www.wildberries.ru/catalog/search?text=${encodeURIComponent(query)}`,
            marketplace: 'wildberries' as const,
            category: category,
            colors: ['—á–µ—Ä–Ω—ã–π', '–∫–æ—Ä–∏—á–Ω–µ–≤—ã–π', '–±–µ–∂–µ–≤—ã–π'],
            sizes: ['—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π']
          },
          {
            id: 'acc_2',
            name: '–°–æ–ª–Ω—Ü–µ–∑–∞—â–∏—Ç–Ω—ã–µ –æ—á–∫–∏',
            price: 1800,
            originalPrice: 2500,
            discount: 28,
            rating: 4.0,
            reviews: 89,
            image: '/placeholder.svg',
            url: `https://www.wildberries.ru/catalog/search?text=${encodeURIComponent(query)}`,
            marketplace: 'wildberries' as const,
            category: category,
            colors: ['—á–µ—Ä–Ω—ã–π', '–∫–æ—Ä–∏—á–Ω–µ–≤—ã–π'],
            sizes: ['—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π']
          }
        );
        break;
        
      default:
        // –û–±—â–∏–µ —Ç–æ–≤–∞—Ä—ã –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        products.push(
          {
            id: 'general_1',
            name: isFemale ? '–ñ–µ–Ω—Å–∫–∞—è –æ–¥–µ–∂–¥–∞' : '–ú—É–∂—Å–∫–∞—è –æ–¥–µ–∂–¥–∞',
            price: 2000,
            originalPrice: 2800,
            discount: 29,
            rating: 4.2,
            reviews: 156,
            image: '/placeholder.svg',
            url: `https://www.wildberries.ru/catalog/search?text=${encodeURIComponent(query)}`,
            marketplace: 'wildberries' as const,
            category: '–æ–¥–µ–∂–¥–∞',
            colors: ['—á–µ—Ä–Ω—ã–π', '–±–µ–ª—ã–π', '—Å–µ—Ä—ã–π'],
            sizes: ['S', 'M', 'L', 'XL']
          }
        );
    }
    
    return products;
  }

  private detectCategory(query: string): string {
    const lowerQuery = query.toLowerCase();
    
    if (lowerQuery.includes('—Ä—É–±–∞—à–∫–∞') || lowerQuery.includes('–±–ª—É–∑–∫–∞')) return '—Ä—É–±–∞—à–∫–∞';
    if (lowerQuery.includes('—é–±–∫–∞')) return '—é–±–∫–∞';
    if (lowerQuery.includes('–±—Ä—é–∫–∏') || lowerQuery.includes('–¥–∂–∏–Ω—Å—ã')) return '–±—Ä—é–∫–∏';
    if (lowerQuery.includes('—Ñ—É—Ç–±–æ–ª–∫–∞') || lowerQuery.includes('–º–∞–π–∫–∞')) return '—Ñ—É—Ç–±–æ–ª–∫–∞';
    if (lowerQuery.includes('–∫–µ–¥—ã') || lowerQuery.includes('–∫—Ä–æ—Å—Å–æ–≤–∫–∏') || lowerQuery.includes('–æ–±—É–≤—å')) return '–æ–±—É–≤—å';
    if (lowerQuery.includes('—Å—É–º–∫–∞') || lowerQuery.includes('–æ—á–∫–∏') || lowerQuery.includes('–∞–∫—Å–µ—Å—Å—É–∞—Ä—ã')) return '–∞–∫—Å–µ—Å—Å—É–∞—Ä—ã';
    
    return '–æ–¥–µ–∂–¥–∞';
  }

  private getFallbackProductsForCategory(category: string, params: SearchParams): Product[] {
    console.log(`üîÑ Using fallback products for category: ${category}`);
    
    const categoryProducts: Record<string, Product[]> = {
      '—Ä—É–±–∞—à–∫–∞': [
        {
          id: `wb_fallback_${category}_1`,
          name: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è —Ä—É–±–∞—à–∫–∞',
          price: 2500,
          originalPrice: 3500,
          discount: 29,
          rating: 4.5,
          reviews: 128,
          image: '/placeholder.svg',
          url: 'https://www.wildberries.ru',
          marketplace: 'wildberries',
          category: '–í–µ—Ä—Ö',
          colors: ['–ë–µ–ª—ã–π', '–ì–æ–ª—É–±–æ–π'],
          sizes: ['S', 'M', 'L', 'XL']
        }
      ],
      '–±—Ä—é–∫–∏': [
        {
          id: `wb_fallback_${category}_1`,
          name: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –±—Ä—é–∫–∏',
          price: 3200,
          originalPrice: 4500,
          discount: 29,
          rating: 4.3,
          reviews: 89,
          image: '/placeholder.svg',
          url: 'https://www.wildberries.ru',
          marketplace: 'wildberries',
          category: '–ù–∏–∑',
          colors: ['–ß–µ—Ä–Ω—ã–π', '–°–µ—Ä—ã–π'],
          sizes: ['S', 'M', 'L', 'XL']
        }
      ],
      '—Ñ—É—Ç–±–æ–ª–∫–∞': [
        {
          id: `wb_fallback_${category}_1`,
          name: '–ë–∞–∑–æ–≤–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞',
          price: 1200,
          originalPrice: 1800,
          discount: 33,
          rating: 4.2,
          reviews: 67,
          image: '/placeholder.svg',
          url: 'https://www.wildberries.ru',
          marketplace: 'wildberries',
          category: '–í–µ—Ä—Ö',
          colors: ['–ë–µ–ª—ã–π', '–ß–µ—Ä–Ω—ã–π', '–°–µ—Ä—ã–π'],
          sizes: ['S', 'M', 'L', 'XL']
        }
      ],
      '–¥–∂–∏–Ω—Å—ã': [
        {
          id: `wb_fallback_${category}_1`,
          name: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –¥–∂–∏–Ω—Å—ã',
          price: 2800,
          originalPrice: 4000,
          discount: 30,
          rating: 4.4,
          reviews: 156,
          image: '/placeholder.svg',
          url: 'https://www.wildberries.ru',
          marketplace: 'wildberries',
          category: '–ù–∏–∑',
          colors: ['–°–∏–Ω–∏–π', '–ß–µ—Ä–Ω—ã–π'],
          sizes: ['S', 'M', 'L', 'XL']
        }
      ],
      '–∫—Ä–æ—Å—Å–æ–≤–∫–∏': [
        {
          id: `wb_fallback_${category}_1`,
          name: '–£–¥–æ–±–Ω—ã–µ –∫—Ä–æ—Å—Å–æ–≤–∫–∏',
          price: 4500,
          originalPrice: 6000,
          discount: 25,
          rating: 4.7,
          reviews: 256,
          image: '/placeholder.svg',
          url: 'https://www.wildberries.ru',
          marketplace: 'wildberries',
          category: '–û–±—É–≤—å',
          colors: ['–ë–µ–ª—ã–π', '–ß–µ—Ä–Ω—ã–π'],
          sizes: ['36', '37', '38', '39', '40', '41', '42']
        }
      ],
      '–æ—á–∫–∏': [
        {
          id: `wb_fallback_${category}_1`,
          name: '–°–æ–ª–Ω—Ü–µ–∑–∞—â–∏—Ç–Ω—ã–µ –æ—á–∫–∏',
          price: 800,
          originalPrice: 1200,
          discount: 33,
          rating: 4.1,
          reviews: 45,
          image: '/placeholder.svg',
          url: 'https://www.wildberries.ru',
          marketplace: 'wildberries',
          category: '–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã',
          colors: ['–ß–µ—Ä–Ω—ã–π', '–ö–æ—Ä–∏—á–Ω–µ–≤—ã–π'],
          sizes: ['–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π']
        }
      ],
      '—Ä–µ–º–µ–Ω—å': [
        {
          id: `wb_fallback_${category}_1`,
          name: '–ö–æ–∂–∞–Ω—ã–π —Ä–µ–º–µ–Ω—å',
          price: 600,
          originalPrice: 900,
          discount: 33,
          rating: 4.0,
          reviews: 23,
          image: '/placeholder.svg',
          url: 'https://www.wildberries.ru',
          marketplace: 'wildberries',
          category: '–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã',
          colors: ['–ö–æ—Ä–∏—á–Ω–µ–≤—ã–π', '–ß–µ—Ä–Ω—ã–π'],
          sizes: ['S', 'M', 'L']
        }
      ]
    };
    
    return categoryProducts[category] || [
      {
        id: `wb_fallback_${category}_1`,
        name: `–¢–æ–≤–∞—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${category}`,
        price: 2000,
        originalPrice: 3000,
        discount: 33,
        rating: 4.0,
        reviews: 50,
        image: '/placeholder.svg',
        url: 'https://www.wildberries.ru',
        marketplace: 'wildberries',
        category: '–î—Ä—É–≥–æ–µ',
        colors: ['–ß–µ—Ä–Ω—ã–π'],
        sizes: ['–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π']
      }
    ];
  }

  async getRecommendations(params: SearchParams, generatedOutfit?: any): Promise<Product[]> {
    const { bodyType, occasion, budget, gender } = params;
    
    console.log('üéØ Starting improved Wildberries parsing for:', { bodyType, occasion, gender });
    
    const allProducts: Product[] = [];
    
    // –ï—Å–ª–∏ —É –Ω–∞—Å –µ—Å—Ç—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—Ä–∞–∑, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–∏—Å–∫–∞
    if (generatedOutfit && generatedOutfit.items && generatedOutfit.items.length > 0) {
      console.log('üé® Using generated outfit data for search:', generatedOutfit.name);
      
      for (const item of generatedOutfit.items) {
        console.log(`üîç Searching for specific item: ${item.name}`);
        
        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –æ–±—Ä–∞–∑–∞
        const specificQuery = this.buildSpecificSearchQuery(item, params);
        console.log(`üìù Specific search query: "${specificQuery}"`);
        
        try {
          const products = await this.searchProducts({
            ...params,
            query: specificQuery,
            limit: 2
          });
          console.log(`‚úÖ Found ${products.length} products for "${item.name}"`);
          allProducts.push(...products);
        } catch (error) {
          console.log(`‚ö†Ô∏è Failed to search for "${item.name}":`, error);
          // –î–æ–±–∞–≤–ª—è–µ–º fallback –ø—Ä–æ–¥—É–∫—Ç—ã –¥–ª—è —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
          const fallbackProducts = this.getFallbackProductsForCategory(item.category, params);
          allProducts.push(...fallbackProducts);
        }
      }
    } else {
      // Fallback: –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
      console.log('üìã Using fallback categories for search');
      const categories = this.getCategoriesByParams(bodyType, occasion, gender);
      
      for (const category of categories) {
        console.log(`üîç Searching for category: ${category}`);
        try {
          const products = await this.searchProducts({
            ...params,
            query: category,
            limit: 3
          });
          console.log(`‚úÖ Found ${products.length} products for ${category}`);
          allProducts.push(...products);
        } catch (error) {
          console.log(`‚ö†Ô∏è Failed to search for ${category}:`, error);
          const fallbackProducts = this.getFallbackProductsForCategory(category, params);
          allProducts.push(...fallbackProducts);
        }
      }
    }
    
    console.log(`üì¶ Total products found: ${allProducts.length}`);
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ –±—é–¥–∂–µ—Ç—É
    const filteredProducts = this.filterByBudget(allProducts, budget);
    console.log(`üí∞ After budget filter: ${filteredProducts.length} products`);
    
    // –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
    const uniqueProducts = this.removeDuplicates(filteredProducts);
    console.log(`üéØ Final unique products: ${uniqueProducts.length}`);
    
    const result = uniqueProducts.slice(0, 9);
    console.log(`üéØ Returning ${result.length} product recommendations from Wildberries`);
    return result;
  }

  private getCategoriesByParams(bodyType: string, occasion: string, gender: 'male' | 'female'): string[] {
    const categories: string[] = [];
    
    // –ë–∞–∑–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    if (gender === 'female') {
      categories.push('—Ä—É–±–∞—à–∫–∞', '–±—Ä—é–∫–∏', '—Ñ—É—Ç–±–æ–ª–∫–∞', '–¥–∂–∏–Ω—Å—ã');
    } else {
      categories.push('—Ä—É–±–∞—à–∫–∞', '–±—Ä—é–∫–∏', '—Ñ—É—Ç–±–æ–ª–∫–∞', '–¥–∂–∏–Ω—Å—ã');
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã
    categories.push('–∫—Ä–æ—Å—Å–æ–≤–∫–∏', '–æ—á–∫–∏', '—Ä–µ–º–µ–Ω—å');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ —Ç–∏–ø—É —Ñ–∏–≥—É—Ä—ã
    if (bodyType === 'hourglass') {
      categories.push('–ø–ª–∞—Ç—å–µ');
    } else if (bodyType === 'rectangle') {
      categories.push('–ø–ª–∞—Ç—å–µ');
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ –ø–æ–≤–æ–¥—É
    if (occasion === 'business') {
      categories.push('–∫–æ—Å—Ç—é–º');
    } else if (occasion === 'casual') {
      categories.push('–¥–∂–∏–Ω—Å—ã');
    }
    
    return categories;
  }

  private filterByBudget(products: Product[], budget: string): Product[] {
    const budgetLimits = {
      'low': 3000,
      'medium': 8000,
      'high': 20000
    };
    
    const limit = budgetLimits[budget as keyof typeof budgetLimits] || 8000;
    
    return products.filter(product => product.price <= limit);
  }

  private removeDuplicates(products: Product[]): Product[] {
    const seen = new Set();
    return products.filter(product => {
      const duplicate = seen.has(product.id);
      seen.add(product.id);
      return !duplicate;
    });
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API
  async testAPI(): Promise<{ success: boolean; message: string; data?: any }> {
    try {
      console.log('üß™ Testing Wildberries API...');
      
      const testParams = {
        query: '—Ñ—É—Ç–±–æ–ª–∫–∞',
        bodyType: 'rectangle',
        occasion: 'casual',
        budget: 'medium',
        gender: 'male' as const
      };
      
      const apiParams = new URLSearchParams({
        TestGroup: 'no_test',
        TestID: 'no_test',
        appType: '1',
        curr: 'rub',
        dest: '-1257786',
        query: '—Ñ—É—Ç–±–æ–ª–∫–∞',
        resultset: 'catalog',
        sort: 'popular',
        suppressSpellcheck: 'false',
        uoffset: '0',
        ulimit: '5',
        lang: 'ru',
        locale: 'ru'
      });

      const response = await fetch(`${this.baseUrl}?${apiParams}`, {
        headers: {
          'Accept': 'application/json',
          'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
          'Accept-Language': 'ru-RU,ru;q=0.9,en;q=0.8'
        }
      });

      console.log('üì° Test API Response Status:', response.status);
      console.log('üì° Test API Response Headers:', Object.fromEntries(response.headers.entries()));

      if (!response.ok) {
        const errorText = await response.text();
        return {
          success: false,
          message: `API Error ${response.status}: ${errorText}`,
          data: { status: response.status, statusText: response.statusText }
        };
      }

      const data = await response.json();
      console.log('üì¶ Test API Response Data:', data);
      
      return {
        success: true,
        message: 'API test successful',
        data: data
      };

    } catch (error) {
      console.error('‚ùå API test failed:', error);
      return {
        success: false,
        message: `Test failed: ${error}`,
        data: { error: error }
      };
    }
  }
}

export const wildberriesService = new WildberriesService(); 